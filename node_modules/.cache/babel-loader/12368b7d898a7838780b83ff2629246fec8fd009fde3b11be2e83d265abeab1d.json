{"ast":null,"code":"var _jsxFileName = \"C:\\\\transcript-app\\\\src\\\\TranscriptDisplayTable.tsx\";\nexport {};\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscriptDisplayTable = ({\n  transcriptCourses\n}) => {\n  // Group transcript courses by session\n  const sessions = {};\n  transcriptCourses.forEach(course => {\n    if (!sessions[course.session]) {\n      sessions[course.session] = [];\n    }\n    sessions[course.session].push(course);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transcript Sessions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), Object.entries(sessions).map(([session, courses]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Session: \", session]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Grade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: courses.map(course => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [course.course.name, \" \", course.course.code]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.grade !== null ? course.grade : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.term !== null ? course.term : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)]\n          }, course.course.code, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, session, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = TranscriptDisplayTable;\nexport default TranscriptDisplayTable;\nvar _c;\n$RefreshReg$(_c, \"TranscriptDisplayTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TranscriptDisplayTable","transcriptCourses","sessions","forEach","course","session","push","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","courses","name","code","grade","term","_c","$RefreshReg$"],"sources":["C:/transcript-app/src/TranscriptDisplayTable.tsx"],"sourcesContent":["export {};\r\nimport React from 'react';\r\nimport { Table } from 'antd';\r\nimport { TranscriptCourse } from './TranscriptCourse';\r\n\r\ninterface TranscriptDisplayTableProps {\r\n  transcriptCourses: TranscriptCourse[];\r\n}\r\n\r\nconst TranscriptDisplayTable: React.FC<TranscriptDisplayTableProps> = ({ transcriptCourses }) => {\r\n  // Group transcript courses by session\r\n  const sessions: { [key: string]: TranscriptCourse[] } = {};\r\n  transcriptCourses.forEach(course => {\r\n    if (!sessions[course.session]) {\r\n      sessions[course.session] = [];\r\n    }\r\n    sessions[course.session].push(course);\r\n  });\r\n return (\r\n    <div>\r\n      <h2>Transcript Sessions</h2>\r\n      {Object.entries(sessions).map(([session, courses]) => (\r\n        <div key={session}>\r\n          <h3>Session: {session}</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Course</th>\r\n                <th>Grade</th>\r\n                <th>Term</th>\r\n                {/* Add more table headers if needed */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {courses.map(course => (\r\n                <tr key={course.course.code}>\r\n                  <td>{course.course.name} {course.course.code}</td>\r\n<td>{course.grade !== null ? course.grade : 'N/A'}</td>\r\n                  <td>{course.term !== null ? course.term : 'N/A'}</td>\r\n                  {/* Add more table cells if needed */}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TranscriptDisplayTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}